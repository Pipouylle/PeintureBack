<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Affaires__CLASSMETADATA__' => 0,
'App__Entity__ArticleCouche__CLASSMETADATA__' => 1,
'App__Entity__Articles__CLASSMETADATA__' => 2,
'App__Entity__Commandes__CLASSMETADATA__' => 3,
'App__Entity__Consommations__CLASSMETADATA__' => 4,
'App__Entity__Couches__CLASSMETADATA__' => 5,
'App__Entity__Demandes__CLASSMETADATA__' => 6,
'App__Entity__Grenaillage__CLASSMETADATA__' => 7,
'App__Entity__Jours__CLASSMETADATA__' => 8,
'App__Entity__OFs__CLASSMETADATA__' => 9,
'App__Entity__Semaines__CLASSMETADATA__' => 10,
'App__Entity__SurfaceCouches__CLASSMETADATA__' => 11,
'App__Entity__Systemes__CLASSMETADATA__' => 12,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Affaires',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\AffairesRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'numero_affaire' => $o[2],
                        'nom_affaire' => $o[3],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'numero_affaire' => 'numero_affaire',
                        'nom_affaire' => 'nom_affaire',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'numero_affaire' => 'numero_affaire',
                        'nom_affaire' => 'nom_affaire',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'affaires',
                    ],
                ],
                'associationMappings' => [
                    [
                        'commandes_affaire' => $o[4],
                    ],
                ],
                'idGenerator' => [
                    $o[5],
                ],
                'name' => [
                    'App\\Entity\\Affaires',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'numero_affaire',
                    'nom_affaire',
                ],
                'columnName' => [
                    1 => 'id',
                    'numero_affaire',
                    'nom_affaire',
                ],
                'length' => [
                    2 => 50,
                    50,
                ],
                'nullable' => [
                    2 => true,
                    true,
                ],
                'fetch' => [
                    4 => 2,
                ],
                'sourceEntity' => [
                    4 => 'App\\Entity\\Affaires',
                ],
                'mappedBy' => [
                    4 => 'affaire_commande',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    4 => 'commandes_affaire',
                ],
                'targetEntity' => [
                    4 => 'App\\Entity\\Commandes',
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ArticleCouche',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ArticleCoucheRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'tarif_articleCouche' => $o[2],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'tarif_article_couche' => 'tarif_articleCouche',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'tarif_articleCouche' => 'tarif_article_couche',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'article_couche',
                    ],
                ],
                'associationMappings' => [
                    [
                        'articles_articleCouche' => $o[3],
                        'couche_articleCouche' => $o[4],
                        'commande_articleCouche' => $o[6],
                        'surfaceCouches_articleCouche' => $o[8],
                    ],
                ],
                'idGenerator' => [
                    $o[9],
                ],
                'name' => [
                    'App\\Entity\\ArticleCouche',
                    5 => 'couche_article_couche_id',
                    7 => 'commande_article_couche_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'decimal',
                ],
                'fieldName' => [
                    1 => 'id',
                    'tarif_articleCouche',
                ],
                'columnName' => [
                    1 => 'id',
                    'tarif_article_couche',
                ],
                'nullable' => [
                    2 => true,
                    5 => false,
                    7 => false,
                ],
                'precision' => [
                    2 => 15,
                ],
                'scale' => [
                    2 => 2,
                ],
                'fetch' => [
                    3 => 2,
                    2,
                    6 => 2,
                    8 => 2,
                ],
                'sourceEntity' => [
                    3 => 'App\\Entity\\ArticleCouche',
                    'App\\Entity\\ArticleCouche',
                    6 => 'App\\Entity\\ArticleCouche',
                    8 => 'App\\Entity\\ArticleCouche',
                ],
                'mappedBy' => [
                    3 => 'articleCouches_article',
                    8 => 'articleCouche_surfaceCouche',
                ],
                'inversedBy' => [
                    4 => 'articleCouches_couche',
                    6 => 'articleCouches_commande',
                ],
                'sourceToTargetKeyColumns' => [
                    4 => [
                        'couche_article_couche_id' => 'id',
                    ],
                    6 => [
                        'commande_article_couche_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    4 => [
                        'id' => 'couche_article_couche_id',
                    ],
                    6 => [
                        'id' => 'commande_article_couche_id',
                    ],
                ],
                'joinColumns' => [
                    4 => [
                        $o[5],
                    ],
                    6 => [
                        $o[7],
                    ],
                ],
                'joinColumnFieldNames' => [
                    4 => [
                        'couche_article_couche_id' => 'couche_article_couche_id',
                    ],
                    6 => [
                        'commande_article_couche_id' => 'commande_article_couche_id',
                    ],
                ],
                'unique' => [
                    5 => false,
                    7 => false,
                ],
                'onDelete' => [
                    5 => 'CASCADE',
                    7 => 'CASCADE',
                ],
                'referencedColumnName' => [
                    5 => 'id',
                    7 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    3 => 'articles_articleCouche',
                    'couche_articleCouche',
                    6 => 'commande_articleCouche',
                    8 => 'surfaceCouches_articleCouche',
                ],
                'targetEntity' => [
                    3 => 'App\\Entity\\Articles',
                    'App\\Entity\\Couches',
                    6 => 'App\\Entity\\Commandes',
                    8 => 'App\\Entity\\SurfaceCouches',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTableMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTableMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Articles',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ArticlesRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'designation_article' => $o[2],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'designation_article' => 'designation_article',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'designation_article' => 'designation_article',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'articles',
                    ],
                ],
                'associationMappings' => [
                    [
                        'consommation_article' => $o[3],
                        'articleCouches_article' => $o[4],
                    ],
                ],
                'idGenerator' => [
                    $o[8],
                ],
                'name' => [
                    'App\\Entity\\Articles',
                    5 => 'articles_article_couche',
                    'articles_id',
                    'article_couche_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'bigint',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'designation_article',
                ],
                'columnName' => [
                    1 => 'id',
                    'designation_article',
                ],
                'length' => [
                    2 => 50,
                ],
                'nullable' => [
                    2 => true,
                ],
                'cascade' => [
                    3 => [
                        'persist',
                        'remove',
                    ],
                ],
                'fetch' => [
                    3 => 2,
                    2,
                ],
                'sourceEntity' => [
                    3 => 'App\\Entity\\Articles',
                    'App\\Entity\\Articles',
                ],
                'mappedBy' => [
                    3 => 'codeArticle_consommation',
                ],
                'isOnDeleteCascade' => [
                    4 => true,
                ],
                'inversedBy' => [
                    4 => 'articles_articleCouche',
                ],
                'joinTable' => [
                    4 => $o[5],
                ],
                'joinTableColumns' => [
                    4 => [
                        'articles_id',
                        'article_couche_id',
                    ],
                ],
                'relationToSourceKeyColumns' => [
                    4 => [
                        'articles_id' => 'id',
                    ],
                ],
                'relationToTargetKeyColumns' => [
                    4 => [
                        'article_couche_id' => 'id',
                    ],
                ],
                'joinColumns' => [
                    5 => [
                        $o[6],
                    ],
                ],
                'inverseJoinColumns' => [
                    5 => [
                        $o[7],
                    ],
                ],
                'onDelete' => [
                    6 => 'CASCADE',
                    'CASCADE',
                ],
                'referencedColumnName' => [
                    6 => 'id',
                    'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    3 => 'consommation_article',
                    'articleCouches_article',
                ],
                'targetEntity' => [
                    3 => 'App\\Entity\\Consommations',
                    'App\\Entity\\ArticleCouche',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Commandes',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CommandesRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'eureka_commande' => $o[2],
                        'commentaire_commande' => $o[3],
                        'surface_commande' => $o[4],
                        'regieSFP_commande' => $o[5],
                        'regieFP_commande' => $o[6],
                        'ficheH_commande' => $o[7],
                        'pvPeinture_commande' => $o[8],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'eureka_commande' => 'eureka_commande',
                        'commentaire_commande' => 'commentaire_commande',
                        'surface_commande' => 'surface_commande',
                        'regie_sfp_commande' => 'regieSFP_commande',
                        'regie_fp_commande' => 'regieFP_commande',
                        'fiche_h_commande' => 'ficheH_commande',
                        'pv_peinture_commande' => 'pvPeinture_commande',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'eureka_commande' => 'eureka_commande',
                        'commentaire_commande' => 'commentaire_commande',
                        'surface_commande' => 'surface_commande',
                        'regieSFP_commande' => 'regie_sfp_commande',
                        'regieFP_commande' => 'regie_fp_commande',
                        'ficheH_commande' => 'fiche_h_commande',
                        'pvPeinture_commande' => 'pv_peinture_commande',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'commandes',
                    ],
                ],
                'associationMappings' => [
                    [
                        'affaire_commande' => $o[9],
                        'systeme_commande' => $o[11],
                        'demandes_commande' => $o[13],
                        'articleCouches_commande' => $o[14],
                    ],
                ],
                'idGenerator' => [
                    $o[15],
                ],
                'name' => [
                    'App\\Entity\\Commandes',
                    10 => 'affaire_commande_id',
                    12 => 'systeme_commande_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'bigint',
                    'bigint',
                    'bigint',
                    'boolean',
                    'boolean',
                ],
                'fieldName' => [
                    1 => 'id',
                    'eureka_commande',
                    'commentaire_commande',
                    'surface_commande',
                    'regieSFP_commande',
                    'regieFP_commande',
                    'ficheH_commande',
                    'pvPeinture_commande',
                ],
                'columnName' => [
                    1 => 'id',
                    'eureka_commande',
                    'commentaire_commande',
                    'surface_commande',
                    'regie_sfp_commande',
                    'regie_fp_commande',
                    'fiche_h_commande',
                    'pv_peinture_commande',
                ],
                'length' => [
                    2 => 50,
                    100,
                ],
                'nullable' => [
                    3 => true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    10 => false,
                    12 => false,
                ],
                'fetch' => [
                    9 => 2,
                    11 => 2,
                    13 => 2,
                    2,
                ],
                'sourceEntity' => [
                    9 => 'App\\Entity\\Commandes',
                    11 => 'App\\Entity\\Commandes',
                    13 => 'App\\Entity\\Commandes',
                    'App\\Entity\\Commandes',
                ],
                'inversedBy' => [
                    9 => 'commandes_affaire',
                    11 => 'commande_systeme',
                ],
                'sourceToTargetKeyColumns' => [
                    9 => [
                        'affaire_commande_id' => 'id',
                    ],
                    11 => [
                        'systeme_commande_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    9 => [
                        'id' => 'affaire_commande_id',
                    ],
                    11 => [
                        'id' => 'systeme_commande_id',
                    ],
                ],
                'joinColumns' => [
                    9 => [
                        $o[10],
                    ],
                    11 => [
                        $o[12],
                    ],
                ],
                'joinColumnFieldNames' => [
                    9 => [
                        'affaire_commande_id' => 'affaire_commande_id',
                    ],
                    11 => [
                        'systeme_commande_id' => 'systeme_commande_id',
                    ],
                ],
                'unique' => [
                    10 => false,
                    12 => false,
                ],
                'onDelete' => [
                    10 => 'CASCADE',
                    12 => 'CASCADE',
                ],
                'referencedColumnName' => [
                    10 => 'id',
                    12 => 'id',
                ],
                'cascade' => [
                    13 => [
                        'persist',
                        'remove',
                    ],
                    [
                        'persist',
                        'remove',
                    ],
                ],
                'mappedBy' => [
                    13 => 'commande_demande',
                    'commande_articleCouche',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    9 => 'affaire_commande',
                    11 => 'systeme_commande',
                    13 => 'demandes_commande',
                    'articleCouches_commande',
                ],
                'targetEntity' => [
                    9 => 'App\\Entity\\Affaires',
                    11 => 'App\\Entity\\Systemes',
                    13 => 'App\\Entity\\Demandes',
                    'App\\Entity\\ArticleCouche',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Consommations',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ConsommationsRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'quantiter_consommation' => $o[2],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'quantiter_consommation' => 'quantiter_consommation',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'quantiter_consommation' => 'quantiter_consommation',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'consommations',
                    ],
                ],
                'associationMappings' => [
                    [
                        'of_consommation' => $o[3],
                        'codeArticle_consommation' => $o[5],
                    ],
                ],
                'idGenerator' => [
                    $o[7],
                ],
                'name' => [
                    'App\\Entity\\Consommations',
                    4 => 'of_consommation_id',
                    6 => 'code_article_consommation_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'integer',
                ],
                'fieldName' => [
                    1 => 'id',
                    'quantiter_consommation',
                ],
                'columnName' => [
                    1 => 'id',
                    'quantiter_consommation',
                ],
                'fetch' => [
                    3 => 2,
                    5 => 2,
                ],
                'sourceEntity' => [
                    3 => 'App\\Entity\\Consommations',
                    5 => 'App\\Entity\\Consommations',
                ],
                'inversedBy' => [
                    3 => 'consommations_of',
                    5 => 'consommation_article',
                ],
                'sourceToTargetKeyColumns' => [
                    3 => [
                        'of_consommation_id' => 'id',
                    ],
                    5 => [
                        'code_article_consommation_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    3 => [
                        'id' => 'of_consommation_id',
                    ],
                    5 => [
                        'id' => 'code_article_consommation_id',
                    ],
                ],
                'joinColumns' => [
                    3 => [
                        $o[4],
                    ],
                    5 => [
                        $o[6],
                    ],
                ],
                'joinColumnFieldNames' => [
                    3 => [
                        'of_consommation_id' => 'of_consommation_id',
                    ],
                    5 => [
                        'code_article_consommation_id' => 'code_article_consommation_id',
                    ],
                ],
                'unique' => [
                    4 => false,
                    6 => false,
                ],
                'onDelete' => [
                    4 => 'CASCADE',
                    6 => 'CASCADE',
                ],
                'nullable' => [
                    4 => false,
                    6 => false,
                ],
                'referencedColumnName' => [
                    4 => 'id',
                    6 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    3 => 'of_consommation',
                    5 => 'codeArticle_consommation',
                ],
                'targetEntity' => [
                    3 => 'App\\Entity\\OFs',
                    5 => 'App\\Entity\\Articles',
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Couches',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CouchesRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'epaisseur_couche' => $o[2],
                        'nom_couche' => $o[3],
                        'tarif_couche' => $o[4],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'epaisseur_couche' => 'epaisseur_couche',
                        'nom_couche' => 'nom_couche',
                        'tarif_couche' => 'tarif_couche',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'epaisseur_couche' => 'epaisseur_couche',
                        'nom_couche' => 'nom_couche',
                        'tarif_couche' => 'tarif_couche',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'couches',
                    ],
                ],
                'associationMappings' => [
                    [
                        'systeme_couche' => $o[5],
                        'articleCouches_couche' => $o[7],
                    ],
                ],
                'idGenerator' => [
                    $o[8],
                ],
                'name' => [
                    'App\\Entity\\Couches',
                    6 => 'systeme_couche_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'decimal',
                    'string',
                    'decimal',
                ],
                'fieldName' => [
                    1 => 'id',
                    'epaisseur_couche',
                    'nom_couche',
                    'tarif_couche',
                ],
                'columnName' => [
                    1 => 'id',
                    'epaisseur_couche',
                    'nom_couche',
                    'tarif_couche',
                ],
                'nullable' => [
                    2 => true,
                    true,
                    true,
                    6 => false,
                ],
                'precision' => [
                    2 => 15,
                    4 => 15,
                ],
                'scale' => [
                    2 => 2,
                    4 => 2,
                ],
                'length' => [
                    3 => 50,
                ],
                'fetch' => [
                    5 => 2,
                    7 => 2,
                ],
                'sourceEntity' => [
                    5 => 'App\\Entity\\Couches',
                    7 => 'App\\Entity\\Couches',
                ],
                'inversedBy' => [
                    5 => 'Couches_syteme',
                ],
                'sourceToTargetKeyColumns' => [
                    5 => [
                        'systeme_couche_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    5 => [
                        'id' => 'systeme_couche_id',
                    ],
                ],
                'joinColumns' => [
                    5 => [
                        $o[6],
                    ],
                ],
                'joinColumnFieldNames' => [
                    5 => [
                        'systeme_couche_id' => 'systeme_couche_id',
                    ],
                ],
                'unique' => [
                    6 => false,
                ],
                'onDelete' => [
                    6 => 'CASCADE',
                ],
                'referencedColumnName' => [
                    6 => 'id',
                ],
                'mappedBy' => [
                    7 => 'couche_articleCouche',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    5 => 'systeme_couche',
                    7 => 'articleCouches_couche',
                ],
                'targetEntity' => [
                    5 => 'App\\Entity\\Systemes',
                    7 => 'App\\Entity\\ArticleCouche',
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Demandes',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\DemandesRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'numero_demande' => $o[2],
                        'etat_demande' => $o[3],
                        'surface_demande' => $o[4],
                        'nombrePiece_demande' => $o[5],
                        'date_demande' => $o[6],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'numero_demande' => 'numero_demande',
                        'etat_demande' => 'etat_demande',
                        'surface_demande' => 'surface_demande',
                        'nombre_piece_demande' => 'nombrePiece_demande',
                        'date_demande' => 'date_demande',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'numero_demande' => 'numero_demande',
                        'etat_demande' => 'etat_demande',
                        'surface_demande' => 'surface_demande',
                        'nombrePiece_demande' => 'nombre_piece_demande',
                        'date_demande' => 'date_demande',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'demandes',
                    ],
                ],
                'associationMappings' => [
                    [
                        'commande_demande' => $o[7],
                        'Of_demande' => $o[9],
                        'surfaceCouches_demande' => $o[10],
                    ],
                ],
                'idGenerator' => [
                    $o[11],
                ],
                'name' => [
                    'App\\Entity\\Demandes',
                    8 => 'commande_demande_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'bigint',
                    'integer',
                    'date',
                ],
                'fieldName' => [
                    1 => 'id',
                    'numero_demande',
                    'etat_demande',
                    'surface_demande',
                    'nombrePiece_demande',
                    'date_demande',
                ],
                'columnName' => [
                    1 => 'id',
                    'numero_demande',
                    'etat_demande',
                    'surface_demande',
                    'nombre_piece_demande',
                    'date_demande',
                ],
                'length' => [
                    2 => 50,
                    50,
                ],
                'nullable' => [
                    2 => true,
                    true,
                    true,
                    true,
                    true,
                    8 => false,
                ],
                'fetch' => [
                    7 => 2,
                    9 => 2,
                    2,
                ],
                'sourceEntity' => [
                    7 => 'App\\Entity\\Demandes',
                    9 => 'App\\Entity\\Demandes',
                    'App\\Entity\\Demandes',
                ],
                'inversedBy' => [
                    7 => 'demandes_commande',
                ],
                'sourceToTargetKeyColumns' => [
                    7 => [
                        'commande_demande_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    7 => [
                        'id' => 'commande_demande_id',
                    ],
                ],
                'joinColumns' => [
                    7 => [
                        $o[8],
                    ],
                ],
                'joinColumnFieldNames' => [
                    7 => [
                        'commande_demande_id' => 'commande_demande_id',
                    ],
                ],
                'unique' => [
                    8 => false,
                ],
                'onDelete' => [
                    8 => 'CASCADE',
                ],
                'referencedColumnName' => [
                    8 => 'id',
                ],
                'cascade' => [
                    9 => [
                        'persist',
                        'remove',
                    ],
                    [
                        'persist',
                        'remove',
                    ],
                ],
                'mappedBy' => [
                    9 => 'idDemande_of',
                    'demande_surfaceCouche',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    7 => 'commande_demande',
                    9 => 'Of_demande',
                    'surfaceCouches_demande',
                ],
                'targetEntity' => [
                    7 => 'App\\Entity\\Commandes',
                    9 => 'App\\Entity\\OFs',
                    'App\\Entity\\SurfaceCouches',
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Grenaillage',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\GrenaillageRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'nom_grenaillage' => $o[2],
                        'typeChantier_grenaillage' => $o[3],
                        'tarif_grenaillage' => $o[4],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom_grenaillage' => 'nom_grenaillage',
                        'type_chantier_grenaillage' => 'typeChantier_grenaillage',
                        'tarif_grenaillage' => 'tarif_grenaillage',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom_grenaillage' => 'nom_grenaillage',
                        'typeChantier_grenaillage' => 'type_chantier_grenaillage',
                        'tarif_grenaillage' => 'tarif_grenaillage',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'grenaillage',
                    ],
                ],
                'associationMappings' => [
                    [
                        'systemes_grenaillage' => $o[5],
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'App\\Entity\\Grenaillage',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'decimal',
                ],
                'fieldName' => [
                    1 => 'id',
                    'nom_grenaillage',
                    'typeChantier_grenaillage',
                    'tarif_grenaillage',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom_grenaillage',
                    'type_chantier_grenaillage',
                    'tarif_grenaillage',
                ],
                'length' => [
                    2 => 50,
                    50,
                ],
                'nullable' => [
                    2 => true,
                    true,
                    true,
                ],
                'precision' => [
                    4 => 5,
                ],
                'scale' => [
                    4 => 2,
                ],
                'cascade' => [
                    5 => [
                        'persist',
                        'remove',
                    ],
                ],
                'fetch' => [
                    5 => 2,
                ],
                'sourceEntity' => [
                    5 => 'App\\Entity\\Grenaillage',
                ],
                'mappedBy' => [
                    5 => 'grenaillage_systeme',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    5 => 'systemes_grenaillage',
                ],
                'targetEntity' => [
                    5 => 'App\\Entity\\Systemes',
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Jours',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\JoursRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'jour' => $o[2],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'jour' => 'jour',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'jour' => 'jour',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'jours',
                    ],
                ],
                'associationMappings' => [
                    [
                        'ofs_jour' => $o[3],
                    ],
                ],
                'idGenerator' => [
                    $o[4],
                ],
                'name' => [
                    'App\\Entity\\Jours',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'jour',
                ],
                'columnName' => [
                    1 => 'id',
                    'jour',
                ],
                'length' => [
                    2 => 50,
                ],
                'nullable' => [
                    2 => true,
                ],
                'fetch' => [
                    3 => 2,
                ],
                'sourceEntity' => [
                    3 => 'App\\Entity\\Jours',
                ],
                'mappedBy' => [
                    3 => 'jour_of',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    3 => 'ofs_jour',
                ],
                'targetEntity' => [
                    3 => 'App\\Entity\\OFs',
                ],
            ],
        ],
        $o[0],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\OFs',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\OFsRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'cabine_of' => $o[2],
                        'avancement_of' => $o[3],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'cabine_of' => 'cabine_of',
                        'avancement_of' => 'avancement_of',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'cabine_of' => 'cabine_of',
                        'avancement_of' => 'avancement_of',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ofs',
                    ],
                ],
                'associationMappings' => [
                    [
                        'idDemande_of' => $o[4],
                        'jour_of' => $o[6],
                        'semaine_of' => $o[8],
                        'consommations_of' => $o[10],
                    ],
                ],
                'idGenerator' => [
                    $o[11],
                ],
                'name' => [
                    'App\\Entity\\OFs',
                    5 => 'id_demande_of_id',
                    7 => 'jour_of_id',
                    9 => 'semaine_of_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'cabine_of',
                    'avancement_of',
                ],
                'columnName' => [
                    1 => 'id',
                    'cabine_of',
                    'avancement_of',
                ],
                'length' => [
                    2 => 50,
                    10,
                ],
                'nullable' => [
                    2 => true,
                    true,
                    5 => false,
                    7 => false,
                    9 => false,
                ],
                'fetch' => [
                    4 => 2,
                    6 => 2,
                    8 => 2,
                    10 => 2,
                ],
                'sourceEntity' => [
                    4 => 'App\\Entity\\OFs',
                    6 => 'App\\Entity\\OFs',
                    8 => 'App\\Entity\\OFs',
                    10 => 'App\\Entity\\OFs',
                ],
                'inversedBy' => [
                    4 => 'Of_demande',
                    6 => 'ofs_jour',
                    8 => 'ofs_semaine',
                ],
                'sourceToTargetKeyColumns' => [
                    4 => [
                        'id_demande_of_id' => 'id',
                    ],
                    6 => [
                        'jour_of_id' => 'id',
                    ],
                    8 => [
                        'semaine_of_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    4 => [
                        'id' => 'id_demande_of_id',
                    ],
                    6 => [
                        'id' => 'jour_of_id',
                    ],
                    8 => [
                        'id' => 'semaine_of_id',
                    ],
                ],
                'joinColumns' => [
                    4 => [
                        $o[5],
                    ],
                    6 => [
                        $o[7],
                    ],
                    8 => [
                        $o[9],
                    ],
                ],
                'joinColumnFieldNames' => [
                    4 => [
                        'id_demande_of_id' => 'id_demande_of_id',
                    ],
                    6 => [
                        'jour_of_id' => 'jour_of_id',
                    ],
                    8 => [
                        'semaine_of_id' => 'semaine_of_id',
                    ],
                ],
                'unique' => [
                    5 => false,
                    7 => false,
                    9 => false,
                ],
                'onDelete' => [
                    5 => 'CASCADE',
                    7 => 'CASCADE',
                    9 => 'CASCADE',
                ],
                'referencedColumnName' => [
                    5 => 'id',
                    7 => 'id',
                    9 => 'id',
                ],
                'mappedBy' => [
                    10 => 'of_consommation',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    4 => 'idDemande_of',
                    6 => 'jour_of',
                    8 => 'semaine_of',
                    10 => 'consommations_of',
                ],
                'targetEntity' => [
                    4 => 'App\\Entity\\Demandes',
                    6 => 'App\\Entity\\Jours',
                    8 => 'App\\Entity\\Semaines',
                    10 => 'App\\Entity\\Consommations',
                ],
            ],
        ],
        $o[0],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Semaines',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\SemainesRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'annees' => $o[2],
                        'mois' => $o[3],
                        'semaine' => $o[4],
                        'dateDebut_semaine' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'annees' => 'annees',
                        'mois' => 'mois',
                        'semaine' => 'semaine',
                        'date_debut_semaine' => 'dateDebut_semaine',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'annees' => 'annees',
                        'mois' => 'mois',
                        'semaine' => 'semaine',
                        'dateDebut_semaine' => 'date_debut_semaine',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'semaines',
                    ],
                ],
                'associationMappings' => [
                    [
                        'ofs_semaine' => $o[6],
                    ],
                ],
                'idGenerator' => [
                    $o[7],
                ],
                'name' => [
                    'App\\Entity\\Semaines',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'integer',
                    'integer',
                    'integer',
                    'date',
                ],
                'fieldName' => [
                    1 => 'id',
                    'annees',
                    'mois',
                    'semaine',
                    'dateDebut_semaine',
                ],
                'columnName' => [
                    1 => 'id',
                    'annees',
                    'mois',
                    'semaine',
                    'date_debut_semaine',
                ],
                'nullable' => [
                    5 => true,
                ],
                'fetch' => [
                    6 => 2,
                ],
                'sourceEntity' => [
                    6 => 'App\\Entity\\Semaines',
                ],
                'mappedBy' => [
                    6 => 'semaine_of',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    6 => 'ofs_semaine',
                ],
                'targetEntity' => [
                    6 => 'App\\Entity\\OFs',
                ],
            ],
        ],
        $o[0],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\SurfaceCouches',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\SurfaceCouchesRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'surface' => $o[2],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'surface' => 'surface',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'surface' => 'surface',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'surface_couches',
                    ],
                ],
                'associationMappings' => [
                    [
                        'articleCouche_surfaceCouche' => $o[3],
                        'demande_surfaceCouche' => $o[5],
                    ],
                ],
                'idGenerator' => [
                    $o[7],
                ],
                'name' => [
                    'App\\Entity\\SurfaceCouches',
                    4 => 'article_couche_surface_couche_id',
                    6 => 'demande_surface_couche_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'bigint',
                ],
                'fieldName' => [
                    1 => 'id',
                    'surface',
                ],
                'columnName' => [
                    1 => 'id',
                    'surface',
                ],
                'nullable' => [
                    2 => true,
                    4 => false,
                    6 => false,
                ],
                'fetch' => [
                    3 => 2,
                    5 => 2,
                ],
                'sourceEntity' => [
                    3 => 'App\\Entity\\SurfaceCouches',
                    5 => 'App\\Entity\\SurfaceCouches',
                ],
                'inversedBy' => [
                    3 => 'surfaceCouches_articleCouche',
                    5 => 'surfaceCouches_demande',
                ],
                'sourceToTargetKeyColumns' => [
                    3 => [
                        'article_couche_surface_couche_id' => 'id',
                    ],
                    5 => [
                        'demande_surface_couche_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    3 => [
                        'id' => 'article_couche_surface_couche_id',
                    ],
                    5 => [
                        'id' => 'demande_surface_couche_id',
                    ],
                ],
                'joinColumns' => [
                    3 => [
                        $o[4],
                    ],
                    5 => [
                        $o[6],
                    ],
                ],
                'joinColumnFieldNames' => [
                    3 => [
                        'article_couche_surface_couche_id' => 'article_couche_surface_couche_id',
                    ],
                    5 => [
                        'demande_surface_couche_id' => 'demande_surface_couche_id',
                    ],
                ],
                'unique' => [
                    4 => false,
                    6 => false,
                ],
                'onDelete' => [
                    4 => 'CASCADE',
                    6 => 'CASCADE',
                ],
                'referencedColumnName' => [
                    4 => 'id',
                    6 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    3 => 'articleCouche_surfaceCouche',
                    5 => 'demande_surfaceCouche',
                ],
                'targetEntity' => [
                    3 => 'App\\Entity\\ArticleCouche',
                    5 => 'App\\Entity\\Demandes',
                ],
            ],
        ],
        $o[0],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Systemes',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\SystemesRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'nom_systeme' => $o[2],
                        'fournisseur_systeme' => $o[3],
                        'type_systeme' => $o[4],
                        'regieFP_Systeme' => $o[5],
                        'regieSFP_systeme' => $o[6],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom_systeme' => 'nom_systeme',
                        'fournisseur_systeme' => 'fournisseur_systeme',
                        'type_systeme' => 'type_systeme',
                        'regie_fp_systeme' => 'regieFP_Systeme',
                        'regie_sfp_systeme' => 'regieSFP_systeme',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom_systeme' => 'nom_systeme',
                        'fournisseur_systeme' => 'fournisseur_systeme',
                        'type_systeme' => 'type_systeme',
                        'regieFP_Systeme' => 'regie_fp_systeme',
                        'regieSFP_systeme' => 'regie_sfp_systeme',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'systemes',
                    ],
                ],
                'associationMappings' => [
                    [
                        'grenaillage_systeme' => $o[7],
                        'commande_systeme' => $o[9],
                        'Couches_syteme' => $o[10],
                    ],
                ],
                'idGenerator' => [
                    $o[11],
                ],
                'name' => [
                    'App\\Entity\\Systemes',
                    8 => 'grenaillage_systeme_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'decimal',
                    'decimal',
                ],
                'fieldName' => [
                    1 => 'id',
                    'nom_systeme',
                    'fournisseur_systeme',
                    'type_systeme',
                    'regieFP_Systeme',
                    'regieSFP_systeme',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom_systeme',
                    'fournisseur_systeme',
                    'type_systeme',
                    'regie_fp_systeme',
                    'regie_sfp_systeme',
                ],
                'length' => [
                    2 => 50,
                    50,
                    50,
                ],
                'nullable' => [
                    3 => true,
                    true,
                    true,
                    true,
                    8 => true,
                ],
                'precision' => [
                    5 => 15,
                    15,
                ],
                'scale' => [
                    5 => 2,
                    2,
                ],
                'fetch' => [
                    7 => 2,
                    9 => 2,
                    2,
                ],
                'sourceEntity' => [
                    7 => 'App\\Entity\\Systemes',
                    9 => 'App\\Entity\\Systemes',
                    'App\\Entity\\Systemes',
                ],
                'inversedBy' => [
                    7 => 'systemes_grenaillage',
                ],
                'sourceToTargetKeyColumns' => [
                    7 => [
                        'grenaillage_systeme_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    7 => [
                        'id' => 'grenaillage_systeme_id',
                    ],
                ],
                'joinColumns' => [
                    7 => [
                        $o[8],
                    ],
                ],
                'joinColumnFieldNames' => [
                    7 => [
                        'grenaillage_systeme_id' => 'grenaillage_systeme_id',
                    ],
                ],
                'unique' => [
                    8 => false,
                ],
                'onDelete' => [
                    8 => 'CASCADE',
                ],
                'referencedColumnName' => [
                    8 => 'id',
                ],
                'cascade' => [
                    9 => [
                        'persist',
                        'remove',
                    ],
                    [
                        'persist',
                        'remove',
                    ],
                ],
                'mappedBy' => [
                    9 => 'systeme_commande',
                    'systeme_couche',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    7 => 'grenaillage_systeme',
                    9 => 'commande_systeme',
                    'Couches_syteme',
                ],
                'targetEntity' => [
                    7 => 'App\\Entity\\Grenaillage',
                    9 => 'App\\Entity\\Commandes',
                    'App\\Entity\\Couches',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
